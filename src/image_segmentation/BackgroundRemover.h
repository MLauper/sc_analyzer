#pragma once
#include <string>
#include "opencv2/opencv.hpp"
#include <opencv2/core.hpp>
#include <opencv2/core/utility.hpp>
#include <opencv2/core/cuda.hpp>
#include <opencv2/videoio.hpp>
#include <opencv2/imgcodecs.hpp>
#include <opencv2/video/background_segm.hpp>
#include <opencv2/cudabgsegm.hpp>
#include <opencv2/cudalegacy.hpp>

namespace image_segmentation
{
	class BackgroundRemover
	{
	public:
		BackgroundRemover();
		cv::cuda::GpuMat removeBackground(std::string image_path, std::string filename);
	private:
		
		cv::Mat fgMaskMOG2; //fg mask fg mask generated by MOG2 method
		cv::Ptr<cv::BackgroundSubtractor> pMOG2; //MOG2 Background subtractor
		char keyboard; //input from keyboard
		cv::Ptr<cv::cuda::BackgroundSubtractorMOG2> gpuMOG2;
		
		cv::Mat frame; //current frame
		cv::cuda::GpuMat d_frame;
		cv::cuda::GpuMat d_fgmask;
		cv::cuda::GpuMat d_fgimg;
		cv::cuda::GpuMat d_bgimg;
		cv::Mat fgmask;
		cv::Mat fgimg;
		cv::Mat bgimg;
	};

}
