#pragma once
#include <string>
#include "opencv2/opencv.hpp"
#include <opencv2/core.hpp>
#include <opencv2/core/utility.hpp>
#include <opencv2/core/cuda.hpp>
#include <opencv2/videoio.hpp>
#include <opencv2/imgcodecs.hpp>
#include <opencv2/video/background_segm.hpp>
#include <opencv2/cudabgsegm.hpp>
#include <opencv2/cudalegacy.hpp>
#include "../dto/Image.h"
#include "../dto/Camera.h"

namespace image_segmentation
{
	class BackgroundRemover
	{
	public:
		BackgroundRemover(dto::Camera& camera);
		void removeBackground(dto::Image& image, dto::Camera& camera);
	private:

		cv::Mat fgMaskMOG2; //fg mask fg mask generated by MOG2 method
		cv::Ptr<cv::BackgroundSubtractor> pMOG2; //MOG2 Background subtractor
		char keyboard; //input from keyboard
		cv::Ptr<cv::cuda::BackgroundSubtractorMOG2> gpuMOG2;

		int fps;
	};
}
